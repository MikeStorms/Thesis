PE_array:                                       
  Col : 16
  Row : 16

precision:
  I : 8
  W : 8
  O_partial : 8
  O_final : 8

single_mac_energy_active : 16
single_mac_energy_idle : 0.05

# The characteristics of the systolic flow of data in the array:
# 1 is horizontal
# 2 is vertical
# 3 is diagonal
# 0 is non-systolic
mac_array_stall :
  systolic: 0

############### you need to set them if doing architecture search ###############
area_max : 3.5e6
area_utilization : 0.75
mem_ratio : 8                                   # minimum ratio between two adjacent levels in the memory hierarchy
PE_memory_depth : 2                             # max number of memory levels in the hierarchy inside the PEs
PE_threshold : 3000                             # maximum memory size that can be stored inside each PE
CHIP_memory_depth : 2                           # max number of memory levels in the hierarchy outside the PEs

banking : [1,4]                                 # memory banking possibility when construct a behaviour memory level
                                                # with physical memory modules from the memory pool.

L2_size:                                        # Each size listed is expressed as a behaviour memory level drawn from the memory pool
  [1048576, 4194304]                            # when does it have to be specified? For now it has to be there when doing architecture search.
L1_size:
  [65536, 524288]

memory_hint:
  sramx:
      memory_instance : sram_big
      memory_unroll : 1
      operand_stored : [O,I,W]
#################################################################################

############# you need to set them if not doing architecture search #############
memory_hierarchy:
   local_weight:
       memory_instance: local_w
       memory_unroll: 256
       operand_stored: [W]
   local_input:
       memory_instance: local_i
       memory_unroll: 256
       operand_stored: [I]
   on_chip_weight:
       memory_instance: on_chip_w
       memory_unroll: 1
       operand_stored: [W]
   global_buffer_i:
       memory_instance: buffer_i
       memory_unroll: 1
       operand_stored: [I,O]
   global_buffer_o:
       memory_instance: buffer_o
       memory_unroll: 1
       operand_stored: [O]
   middle_buffer_i:
       memory_instance: middle_i
       memory_unroll: 1
       operand_stored: [I]
#################################################################################

# If the below parameter is set as True and fixed_spatial_unrolling (in settings.yaml) is False,
# the tool will try out all possible memory unrolling combinations.
memory_unroll_fully_flexible: False